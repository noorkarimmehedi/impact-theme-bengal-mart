{% doc %}
  @prompt
    build a categories slider for me 
{% enddoc %}
{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .ai-categories-slider-{{ ai_gen_id }} {
    padding: {{ block.settings.section_padding }}px 0;
    background-color: {{ block.settings.background_color }};
  }

  .ai-categories-slider__header-{{ ai_gen_id }} {
    text-align: {{ block.settings.heading_alignment }};
    margin-bottom: {{ block.settings.heading_spacing }}px;
    padding: 0 20px;
  }

  .ai-categories-slider__title-{{ ai_gen_id }} {
    font-size: {{ block.settings.heading_size }}px;
    color: {{ block.settings.heading_color }};
    margin: 0;
  }

  .ai-categories-slider__container-{{ ai_gen_id }} {
    position: relative;
    overflow: hidden;
    padding: 0 20px;
  }

  .ai-categories-slider__track-{{ ai_gen_id }} {
    display: flex;
    gap: {{ block.settings.gap }}px;
    overflow-x: auto;
    scroll-behavior: smooth;
    scrollbar-width: none;
    -ms-overflow-style: none;
    padding-bottom: 10px;
  }

  .ai-categories-slider__track-{{ ai_gen_id }}::-webkit-scrollbar {
    display: none;
  }

  .ai-categories-slider__item-{{ ai_gen_id }} {
    flex: 0 0 {{ block.settings.card_width }}px;
    position: relative;
    border-radius: {{ block.settings.card_border_radius }}px;
    overflow: hidden;
    transition: transform 0.3s ease;
  }

  .ai-categories-slider__item-{{ ai_gen_id }}:hover {
    transform: translateY(-5px);
  }

  .ai-categories-slider__link-{{ ai_gen_id }} {
    display: block;
    text-decoration: none;
    position: relative;
    height: {{ block.settings.card_height }}px;
  }

  .ai-categories-slider__image-wrapper-{{ ai_gen_id }} {
    width: 100%;
    height: 100%;
    position: relative;
    background-color: #f4f4f4;
  }

  .ai-categories-slider__image-{{ ai_gen_id }} {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .ai-categories-slider__image-wrapper-{{ ai_gen_id }} svg {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .ai-categories-slider__overlay-{{ ai_gen_id }} {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(to bottom, rgba(0,0,0,0) 0%, rgba(0,0,0,{{ block.settings.overlay_opacity | divided_by: 100.0 }}) 100%);
    display: flex;
    align-items: flex-end;
    padding: 20px;
  }

  .ai-categories-slider__content-{{ ai_gen_id }} {
    width: 100%;
  }

  .ai-categories-slider__category-title-{{ ai_gen_id }} {
    color: {{ block.settings.category_text_color }};
    font-size: {{ block.settings.category_title_size }}px;
    font-weight: 600;
    margin: 0 0 5px 0;
  }

  .ai-categories-slider__count-{{ ai_gen_id }} {
    color: {{ block.settings.category_text_color }};
    font-size: {{ block.settings.category_count_size }}px;
    opacity: 0.9;
  }

  .ai-categories-slider__nav-{{ ai_gen_id }} {
    display: flex;
    justify-content: center;
    gap: 10px;
    margin-top: 30px;
  }

  .ai-categories-slider__nav-button-{{ ai_gen_id }} {
    width: 40px;
    height: 40px;
    border-radius: 50%;
    background-color: {{ block.settings.nav_button_color }};
    color: {{ block.settings.nav_button_icon_color }};
    border: none;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: background-color 0.3s ease;
  }

  .ai-categories-slider__nav-button-{{ ai_gen_id }}:hover {
    background-color: {{ block.settings.nav_button_hover_color }};
  }

  .ai-categories-slider__nav-button-{{ ai_gen_id }}:disabled {
    opacity: 0.3;
    cursor: not-allowed;
  }

  .ai-categories-slider__empty-state-{{ ai_gen_id }} {
    text-align: center;
    padding: 60px 20px;
    color: #666;
  }

  .ai-categories-slider__empty-title-{{ ai_gen_id }} {
    font-size: 18px;
    margin-bottom: 10px;
    color: #333;
  }

  @media screen and (max-width: 749px) {
    .ai-categories-slider__item-{{ ai_gen_id }} {
      flex: 0 0 {{ block.settings.card_width | times: 0.8 }}px;
    }

    .ai-categories-slider__link-{{ ai_gen_id }} {
      height: {{ block.settings.card_height | times: 0.8 }}px;
    }

    .ai-categories-slider__title-{{ ai_gen_id }} {
      font-size: {{ block.settings.heading_size | times: 0.8 }}px;
    }
  }
{% endstyle %}

<categories-slider-{{ ai_gen_id }} class="ai-categories-slider-{{ ai_gen_id }}" {{ block.shopify_attributes }}>
  {% if block.settings.heading != blank %}
    <div class="ai-categories-slider__header-{{ ai_gen_id }}">
      <h2 class="ai-categories-slider__title-{{ ai_gen_id }}">{{ block.settings.heading }}</h2>
    </div>
  {% endif %}

  {% assign has_collections = false %}
  {% for i in (1..8) %}
    {% assign collection_key = 'collection_' | append: i %}
    {% if block.settings[collection_key] != blank %}
      {% assign has_collections = true %}
      {% break %}
    {% endif %}
  {% endfor %}

  {% if has_collections %}
    <div class="ai-categories-slider__container-{{ ai_gen_id }}">
      <div class="ai-categories-slider__track-{{ ai_gen_id }}" data-slider-track>
        {% for i in (1..8) %}
          {% assign collection_key = 'collection_' | append: i %}
          {% assign collection = block.settings[collection_key] %}
          
          {% if collection != blank %}
            <div class="ai-categories-slider__item-{{ ai_gen_id }}">
              <a href="{{ collection.url }}" class="ai-categories-slider__link-{{ ai_gen_id }}">
                <div class="ai-categories-slider__image-wrapper-{{ ai_gen_id }}">
                  {% if collection.featured_image %}
                    <img
                      src="{{ collection.featured_image | image_url: width: 600 }}"
                      alt="{{ collection.featured_image.alt | escape }}"
                      class="ai-categories-slider__image-{{ ai_gen_id }}"
                      loading="lazy"
                      width="600"
                      height="600"
                    >
                  {% else %}
                    {{ 'collection-1' | placeholder_svg_tag }}
                  {% endif %}
                </div>
                <div class="ai-categories-slider__overlay-{{ ai_gen_id }}">
                  <div class="ai-categories-slider__content-{{ ai_gen_id }}">
                    <h3 class="ai-categories-slider__category-title-{{ ai_gen_id }}">{{ collection.title }}</h3>
                    {% if block.settings.show_product_count %}
                      <p class="ai-categories-slider__count-{{ ai_gen_id }}">{{ collection.products_count }} products</p>
                    {% endif %}
                  </div>
                </div>
              </a>
            </div>
          {% endif %}
        {% endfor %}
      </div>
    </div>

    {% if block.settings.show_navigation %}
      <div class="ai-categories-slider__nav-{{ ai_gen_id }}">
        <button
          class="ai-categories-slider__nav-button-{{ ai_gen_id }}"
          data-nav-prev
          aria-label="Previous"
        >
          <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <polyline points="15 18 9 12 15 6"></polyline>
          </svg>
        </button>
        <button
          class="ai-categories-slider__nav-button-{{ ai_gen_id }}"
          data-nav-next
          aria-label="Next"
        >
          <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <polyline points="9 18 15 12 9 6"></polyline>
          </svg>
        </button>
      </div>
    {% endif %}
  {% else %}
    <div class="ai-categories-slider__empty-state-{{ ai_gen_id }}">
      <h3 class="ai-categories-slider__empty-title-{{ ai_gen_id }}">No collections selected</h3>
      <p>Add collections to display in the slider</p>
    </div>
  {% endif %}
</categories-slider-{{ ai_gen_id }}>

<script>
  (function() {
    class CategoriesSlider{{ ai_gen_id }} extends HTMLElement {
      constructor() {
        super();
        this.track = this.querySelector('[data-slider-track]');
        this.prevButton = this.querySelector('[data-nav-prev]');
        this.nextButton = this.querySelector('[data-nav-next]');
      }

      connectedCallback() {
        if (!this.track) return;
        
        this.setupNavigation();
        this.updateButtonStates();
        
        this.track.addEventListener('scroll', () => {
          this.updateButtonStates();
        });
      }

      setupNavigation() {
        if (this.prevButton) {
          this.prevButton.addEventListener('click', () => {
            this.scroll('prev');
          });
        }

        if (this.nextButton) {
          this.nextButton.addEventListener('click', () => {
            this.scroll('next');
          });
        }
      }

      scroll(direction) {
        const scrollAmount = this.track.offsetWidth * 0.8;
        const currentScroll = this.track.scrollLeft;
        
        if (direction === 'next') {
          this.track.scrollLeft = currentScroll + scrollAmount;
        } else {
          this.track.scrollLeft = currentScroll - scrollAmount;
        }
      }

      updateButtonStates() {
        if (!this.prevButton || !this.nextButton) return;

        const isAtStart = this.track.scrollLeft <= 0;
        const isAtEnd = this.track.scrollLeft + this.track.offsetWidth >= this.track.scrollWidth - 1;

        this.prevButton.disabled = isAtStart;
        this.nextButton.disabled = isAtEnd;
      }
    }

    customElements.define('categories-slider-{{ ai_gen_id }}', CategoriesSlider{{ ai_gen_id }});
  })();
</script>

{% schema %}
{
  "name": "Categories slider",
  "tag": null,
  "settings": [
    {
      "type": "header",
      "content": "Heading"
    },
    {
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "Shop by Category"
    },
    {
      "type": "select",
      "id": "heading_alignment",
      "label": "Heading alignment",
      "options": [
        {
          "value": "left",
          "label": "Left"
        },
        {
          "value": "center",
          "label": "Center"
        },
        {
          "value": "right",
          "label": "Right"
        }
      ],
      "default": "center"
    },
    {
      "type": "range",
      "id": "heading_size",
      "min": 20,
      "max": 60,
      "step": 2,
      "unit": "px",
      "label": "Heading size",
      "default": 36
    },
    {
      "type": "range",
      "id": "heading_spacing",
      "min": 10,
      "max": 60,
      "step": 5,
      "unit": "px",
      "label": "Heading spacing",
      "default": 30
    },
    {
      "type": "color",
      "id": "heading_color",
      "label": "Heading color",
      "default": "#000000"
    },
    {
      "type": "header",
      "content": "Collections"
    },
    {
      "type": "collection",
      "id": "collection_1",
      "label": "Collection 1"
    },
    {
      "type": "collection",
      "id": "collection_2",
      "label": "Collection 2"
    },
    {
      "type": "collection",
      "id": "collection_3",
      "label": "Collection 3"
    },
    {
      "type": "collection",
      "id": "collection_4",
      "label": "Collection 4"
    },
    {
      "type": "collection",
      "id": "collection_5",
      "label": "Collection 5"
    },
    {
      "type": "collection",
      "id": "collection_6",
      "label": "Collection 6"
    },
    {
      "type": "collection",
      "id": "collection_7",
      "label": "Collection 7"
    },
    {
      "type": "collection",
      "id": "collection_8",
      "label": "Collection 8"
    },
    {
      "type": "header",
      "content": "Card style"
    },
    {
      "type": "range",
      "id": "card_width",
      "min": 150,
      "max": 400,
      "step": 10,
      "unit": "px",
      "label": "Card width",
      "default": 280
    },
    {
      "type": "range",
      "id": "card_height",
      "min": 150,
      "max": 400,
      "step": 10,
      "unit": "px",
      "label": "Card height",
      "default": 280
    },
    {
      "type": "range",
      "id": "card_border_radius",
      "min": 0,
      "max": 40,
      "step": 4,
      "unit": "px",
      "label": "Card border radius",
      "default": 24
    },
    {
      "type": "range",
      "id": "gap",
      "min": 10,
      "max": 40,
      "step": 5,
      "unit": "px",
      "label": "Gap between cards",
      "default": 20
    },
    {
      "type": "range",
      "id": "overlay_opacity",
      "min": 0,
      "max": 100,
      "step": 5,
      "unit": "%",
      "label": "Overlay opacity",
      "default": 60
    },
    {
      "type": "header",
      "content": "Category text"
    },
    {
      "type": "checkbox",
      "id": "show_product_count",
      "label": "Show product count",
      "default": true
    },
    {
      "type": "range",
      "id": "category_title_size",
      "min": 14,
      "max": 32,
      "step": 2,
      "unit": "px",
      "label": "Title size",
      "default": 20
    },
    {
      "type": "range",
      "id": "category_count_size",
      "min": 12,
      "max": 20,
      "step": 1,
      "unit": "px",
      "label": "Count size",
      "default": 14
    },
    {
      "type": "color",
      "id": "category_text_color",
      "label": "Text color",
      "default": "#ffffff"
    },
    {
      "type": "header",
      "content": "Navigation"
    },
    {
      "type": "checkbox",
      "id": "show_navigation",
      "label": "Show navigation buttons",
      "default": true
    },
    {
      "type": "color",
      "id": "nav_button_color",
      "label": "Button color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "nav_button_hover_color",
      "label": "Button hover color",
      "default": "#333333"
    },
    {
      "type": "color",
      "id": "nav_button_icon_color",
      "label": "Icon color",
      "default": "#ffffff"
    },
    {
      "type": "header",
      "content": "Section style"
    },
    {
      "type": "range",
      "id": "section_padding",
      "min": 0,
      "max": 100,
      "step": 5,
      "unit": "px",
      "label": "Section padding",
      "default": 50
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Background color",
      "default": "#ffffff"
    }
  ],
  "presets": [
    {
      "name": "Categories slider"
    }
  ]
}
{% endschema %}
